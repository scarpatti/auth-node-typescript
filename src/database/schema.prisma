// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz(6)

  name     String
  email    String     @unique
  password String
  phone    String?
  status   UserStatus

  roleId Int
  role   Role @relation(fields: [roleId], references: [id])

  permissions Permission[]

  @@map("users")
}

model PermissionType {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz(6)

  type        String  @unique
  name        String
  description String?

  permissions Permission[]

  @@map("permission_types")
}

model Permission {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz(6)

  slug        String  @unique
  name        String
  description String?

  permissionTypeId Int            @map("permission_type_id")
  permissionType   PermissionType @relation(fields: [permissionTypeId], references: [id])

  roles Role[]

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  @@map("permissions")
}

model RoleType {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz(6)

  name        String  @unique
  description String?

  roles Role[]

  @@map("role_types")
}

model Role {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamptz(6)

  name        String  @unique
  description String?

  roleTypeId Int      @map("role_type_id")
  roleType   RoleType @relation(fields: [roleTypeId], references: [id])

  permissions Permission[]

  Users User[]

  @@map("roles")
}
